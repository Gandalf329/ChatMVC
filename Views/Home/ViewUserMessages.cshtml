@model IEnumerable<SignalRMVC.Models.Message>
@{
    ViewData["Title"] = "User Messages";
}
<div class="messages_content">
    <div class="send_message">
        <input type="text" id="message" name="message" class="input_message" />
        <input type="button" id="sendBtn" class="btn_message" value="Отправить" disabled="disabled" />
    </div>
    <div id="chatroom" class="chatroom">
    @foreach (var item in Model.Reverse())
    {
        <p>
            <b>@item.UserName :</b>
            @item.MessageText
            <b class="dateMessage">@item.Date</b>
        </p>
    }
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
<script>
    const paramsString = document.location.search; // ?name2=Nikita&name=Gandalf329
    const searchParams = new URLSearchParams(paramsString);

    console.log(searchParams.get("name")) //Gandalf329
    console.log(searchParams.get("name2"))//Nikita

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();
    
    document.getElementById("message")
        .addEventListener("keyup", function(event) {
        event.preventDefault();
        if (event.keyCode === 13) {
            document.getElementById("sendBtn").click();
        }
    });

    document.getElementById("sendBtn").addEventListener("click", function () {
        const userName = searchParams.get("name2");   
        const receiverName = searchParams.get("name");
        const message = document.getElementById("message").value;

        hubConnection.invoke("Send", message, userName, receiverName) // отправка данных серверу
            .catch(function (err) {
                return console.error(err.toString());
            });
        document.getElementById("message").value = "";
    });
    // получение данных с сервера
    hubConnection.on("Receive", (message, user, date) => {

        // создаем элемент <b> для имени пользователя
        const userNameElem = document.createElement("b");
        userNameElem.textContent = `${user}: `;
        // создаем элемент <b> для даты
        const elemDate = document.createElement("b");
        elemDate.className = "dateMessage";
        elemDate.textContent = ` ${date}: `;
        console.log(date);
        // создает элемент <p> для сообщения пользователя
        const elem = document.createElement("p");
        elem.appendChild(userNameElem);

        elem.appendChild(document.createTextNode(message));
        elem.appendChild(elemDate);
        
        
        const firstElem = document.getElementById("chatroom").firstChild;
        document.getElementById("chatroom").insertBefore(elem, firstElem);
    });
    // function (message, userName, receiverName) {

    //    // создаем элемент <b> для имени пользователя
    //    const userNameElem = document.createElement("b");
    //    userNameElem.textContent = `${userName}: `;

    //    // создает элемент <p> для сообщения пользователя
    //    const elem = document.createElement("p");
    //    elem.appendChild(userNameElem);
    //    elem.appendChild(document.createTextNode(message));

    //    // добавляем новый элемент в самое начало
    //    // для этого сначала получаем первый элемент
    //    const firstElem = document.getElementById("chatroom").firstChild;
    //    document.getElementById("chatroom").insertBefore(elem, firstElem);
    
    hubConnection.start()
        .then(function () {
            document.getElementById("sendBtn").disabled = false;
        })
        .catch(function (err) {
            return console.error(err.toString());
        });

    $(function () { //temporarily
        $(".chatroom").each(function () {
            let $p = $(this).find("p");
            if ($p.length <= 20) return;

            $p.slice(20).hide();
            $(this).append('<a class="js-show">Еще ' + ($p.length - 20) + '...</a>');
        });

        $(".chatroom").on("click", ".js-show", function () {
            $(this).siblings("p").show().end().remove();
        });
    });

</script>
